import React, { useState, useEffect } from 'react';
import { useSession } from '../../hooks/useSession';

const SessionUserProfile = ({ onProfileClick, showRole = true }) => {
  const { user: sessionUser } = useSession();
  const [imageLoadError, setImageLoadError] = useState(false);
  
  // ÏÑ∏ÏÖò ÏÇ¨Ïö©ÏûêÍ∞Ä Î≥ÄÍ≤ΩÎê† Îïå Ïù¥ÎØ∏ÏßÄ Î°úÎìú ÏóêÎü¨ ÏÉÅÌÉú Ï¥àÍ∏∞Ìôî
  useEffect(() => {
    setImageLoadError(false);
  }, [sessionUser?.id, sessionUser?.profileImageUrl, sessionUser?.socialProfileImage]);
  
  // ÎîîÎ≤ÑÍπÖ: ÏÑ∏ÏÖò Îç∞Ïù¥ÌÑ∞ ÌôïÏù∏
  console.log('üîç SessionUserProfile - ÏÑ∏ÏÖò Îç∞Ïù¥ÌÑ∞:', sessionUser);
  
  // ÌîÑÎ°úÌïÑ Ïù¥ÎØ∏ÏßÄ Ïö∞ÏÑ†ÏàúÏúÑ: ÏÇ¨Ïö©Ïûê ÏóÖÎ°úÎìú > ÏÜåÏÖú > Í∏∞Î≥∏ ÏïÑÏù¥ÏΩò
  const getProfileImageUrl = () => {
    if (sessionUser?.profileImageUrl && !imageLoadError) {
      console.log('üñºÔ∏è ÏÇ¨Ïö©Ïûê ÏóÖÎ°úÎìú Ïù¥ÎØ∏ÏßÄ ÏÇ¨Ïö©:', sessionUser.profileImageUrl);
      return sessionUser.profileImageUrl;
    }
    if (sessionUser?.socialProfileImage && !imageLoadError) {
      console.log('üñºÔ∏è ÏÜåÏÖú Ïù¥ÎØ∏ÏßÄ ÏÇ¨Ïö©:', sessionUser.socialProfileImage);
      return sessionUser.socialProfileImage;
    }
    console.log('üñºÔ∏è Í∏∞Î≥∏ ÏïÑÏù¥ÏΩò ÏÇ¨Ïö©');
    return null;
  };

  // ÌîÑÎ°úÌïÑ Ïù¥ÎØ∏ÏßÄ ÌÉÄÏûÖ ÌÖçÏä§Ìä∏
  const getProfileImageTypeText = () => {
    if (sessionUser?.profileImageUrl && !imageLoadError) {
      return 'ÌîÑÎ°úÌïÑ';
    }
    if (sessionUser?.socialProfileImage && !imageLoadError) {
      return sessionUser.socialProvider || 'ÏÜåÏÖú';
    }
    return 'Í∏∞Î≥∏';
  };

  // ÏÇ¨Ïö©Ïûê Ïù¥Î¶Ñ (Î≥µÌò∏ÌôîÎêú ÏÑ∏ÏÖò Îç∞Ïù¥ÌÑ∞ ÏÇ¨Ïö©)
  const getUserDisplayName = () => {
    // ÏÑ∏ÏÖòÏóêÏÑú Î≥µÌò∏ÌôîÎêú Ïù¥Î¶Ñ Ïö∞ÏÑ† ÏÇ¨Ïö©
    if (sessionUser?.name && !sessionUser.name.includes('==')) {
      return sessionUser.name;
    }
    if (sessionUser?.nickname && !sessionUser.nickname.includes('==')) {
      return sessionUser.nickname;
    }
    if (sessionUser?.username) {
      return sessionUser.username;
    }
    return 'ÏÇ¨Ïö©Ïûê';
  };

  // Ïù¥ÎØ∏ÏßÄ Î°úÎìú Ïã§Ìå® Ï≤òÎ¶¨
  const handleImageError = () => {
    console.log('üñºÔ∏è ÌîÑÎ°úÌïÑ Ïù¥ÎØ∏ÏßÄ Î°úÎìú Ïã§Ìå®, Í∏∞Î≥∏ ÏïÑÏù¥ÏΩòÏúºÎ°ú ÎåÄÏ≤¥');
    setImageLoadError(true);
  };

  const handleImageLoad = () => {
    console.log('üñºÔ∏è ÌîÑÎ°úÌïÑ Ïù¥ÎØ∏ÏßÄ Î°úÎìú ÏÑ±Í≥µ');
  };

  // ÏÇ¨Ïö©Ïûê Ïó≠Ìï† ÌëúÏãúÎ™Ö Î≥ÄÌôò
  const getUserRoleDisplay = (role, branchName = null) => {
    const roleDisplayMap = {
      'HQ_ADMIN': 'Í¥ÄÎ¶¨Ïûê (Î≥∏ÏÇ¨)',
      'SUPER_HQ_ADMIN': 'ÏàòÌçºÍ¥ÄÎ¶¨Ïûê (Î≥∏ÏÇ¨)',
      'BRANCH_SUPER_ADMIN': branchName ? `ÏàòÌçºÍ¥ÄÎ¶¨Ïûê (${branchName})` : 'ÏàòÌçºÍ¥ÄÎ¶¨Ïûê (ÏßÄÏ†ê)',
      'ADMIN': branchName ? `Í¥ÄÎ¶¨Ïûê (${branchName})` : 'Í¥ÄÎ¶¨Ïûê (ÏßÄÏ†ê)',
      'BRANCH_MANAGER': branchName ? `ÏßÄÏ†êÏû• (${branchName})` : 'ÏßÄÏ†êÏû•',
      'CONSULTANT': 'ÏÉÅÎã¥ÏÇ¨',
      'CLIENT': 'ÎÇ¥Îã¥Ïûê',
      // Í∏∞Ï°¥ Ìò∏ÌôòÏÑ±
      'SUPER_ADMIN': 'ÏàòÌçºÍ¥ÄÎ¶¨Ïûê (Î≥∏ÏÇ¨)'
    };
    return roleDisplayMap[role] || role;
  };

  // ÏÇ¨Ïö©Ïûê Ïó≠Ìï† ÏòÅÎ¨∏ ÌëúÏãúÎ™Ö Î≥ÄÌôò
  const getUserRoleDisplayEn = (role, branchName = null) => {
    const roleDisplayMap = {
      'HQ_ADMIN': 'HQ Admin',
      'SUPER_HQ_ADMIN': 'Super HQ Admin',
      'BRANCH_SUPER_ADMIN': branchName ? `Branch Super Admin (${branchName})` : 'Branch Super Admin',
      'ADMIN': branchName ? `Admin (${branchName})` : 'Admin',
      'BRANCH_MANAGER': branchName ? `Branch Manager (${branchName})` : 'Branch Manager',
      'CONSULTANT': 'Consultant',
      'CLIENT': 'Client',
      // Í∏∞Ï°¥ Ìò∏ÌôòÏÑ±
      'SUPER_ADMIN': 'Super HQ Admin'
    };
    return roleDisplayMap[role] || role;
  };

  if (!sessionUser) {
    return null;
  }

  const profileImageUrl = getProfileImageUrl();
  console.log('üîç SessionUserProfile Î†åÎçîÎßÅ:', {
    sessionUser: sessionUser?.id,
    profileImageUrl,
    imageLoadError,
    hasImage: !!profileImageUrl
  });

  return (
    <div className="tablet-user-profile">
      <div 
        className="user-info" 
        onClick={onProfileClick}
        style={{ cursor: 'pointer' }}
      >
        <div className="user-avatar">
          {profileImageUrl ? (
            <img 
              src={profileImageUrl} 
              alt="ÌîÑÎ°úÌïÑ Ïù¥ÎØ∏ÏßÄ" 
              className="profile-image"
              onError={handleImageError}
              onLoad={handleImageLoad}
              style={{ 
                width: '100%', 
                height: '100%', 
                objectFit: 'cover',
                display: 'block'
              }}
            />
          ) : (
            <i className="bi bi-person-circle profile-icon"></i>
          )}
          {/* Ïù¥ÎØ∏ÏßÄ ÌÉÄÏûÖ Î∞∞ÏßÄ */}
          <div className="image-type-badge">
            {getProfileImageTypeText()}
          </div>
        </div>
        <div className="user-details">
          <div className="user-name">{getUserDisplayName()}</div>
          {showRole && <div className="user-role">{getUserRoleDisplay(sessionUser.role, sessionUser.branchName)}</div>}
          {showRole && <div className="user-role-en">{getUserRoleDisplayEn(sessionUser.role, sessionUser.branchName)}</div>}
        </div>
      </div>
    </div>
  );
};

export default SessionUserProfile;
