<?xml version="1.0" encoding="UTF-8"?>
<configuration>
    <!-- 콘솔 출력 -->
    <appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n</pattern>
        </encoder>
    </appender>

    <!-- 일반 로그 파일 -->
    <appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>logs/mindgarden.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>logs/mindgarden.%d{yyyy-MM-dd}.%i.log</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>10MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
            <maxHistory>30</maxHistory>
        </rollingPolicy>
        <encoder>
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n</pattern>
        </encoder>
    </appender>

    <!-- 에러 로그만 따로 파일에 쌓기 -->
    <appender name="ERROR_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>logs/error.log</file>
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>ERROR</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>logs/error.%d{yyyy-MM-dd}.%i.log</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>10MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
            <maxHistory>30</maxHistory>
        </rollingPolicy>
        <encoder>
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n%ex{full}</pattern>
        </encoder>
    </appender>

    <!-- OAuth2 관련 에러 로그만 따로 파일에 쌓기 -->
    <appender name="OAUTH2_ERROR_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>logs/oauth2-error.log</file>
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>ERROR</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>logs/oauth2-error.%d{yyyy-MM-dd}.%i.log</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>10MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
            <maxHistory>30</maxHistory>
        </rollingPolicy>
        <encoder>
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n%ex{full}</pattern>
        </encoder>
    </appender>

    <!-- OAuth2 관련 로거 -->
    <logger name="com.mindgarden.consultation.controller.OAuth2Controller" level="DEBUG" additivity="false">
        <appender-ref ref="CONSOLE"/>
        <appender-ref ref="FILE"/>
        <appender-ref ref="OAUTH2_ERROR_FILE"/>
    </logger>

    <!-- SQL/데이터베이스 오류 로그만 별도 파일로 분리 -->
    <appender name="SQL_ERROR_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>logs/sql-error.log</file>
        <encoder>
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n</pattern>
        </encoder>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>logs/sql-error.%d{yyyy-MM-dd}.%i.log</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>50MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
            <maxHistory>30</maxHistory>
        </rollingPolicy>
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>ERROR</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
    </appender>
    
    <!-- SQL/데이터베이스 관련 로거만 SQL_ERROR_FILE으로 전송 -->
    <logger name="org.hibernate.engine.jdbc.spi.SqlExceptionHelper" level="ERROR" additivity="false">
        <appender-ref ref="SQL_ERROR_FILE"/>
    </logger>
    
    <logger name="org.hibernate.engine.jdbc.env.spi.JdbcEnvironment" level="ERROR" additivity="false">
        <appender-ref ref="SQL_ERROR_FILE"/>
    </logger>
    
    <logger name="org.hibernate.resource.jdbc" level="ERROR" additivity="false">
        <appender-ref ref="SQL_ERROR_FILE"/>
    </logger>
    
    <logger name="org.hibernate.engine.transaction" level="ERROR" additivity="false">
        <appender-ref ref="SQL_ERROR_FILE"/>
    </logger>
    
    <!-- MySQL 관련 오류 로그 -->
    <logger name="com.mysql.cj.jdbc" level="ERROR" additivity="false">
        <appender-ref ref="SQL_ERROR_FILE"/>
    </logger>
    
    <!-- Spring Data JPA 관련 오류 로그 -->
    <logger name="org.springframework.orm.jpa" level="ERROR" additivity="false">
        <appender-ref ref="SQL_ERROR_FILE"/>
    </logger>
    
    <!-- 트랜잭션 관련 오류 로그 -->
    <logger name="org.springframework.transaction" level="ERROR" additivity="false">
        <appender-ref ref="SQL_ERROR_FILE"/>
    </logger>
    
    <!-- 루트 로거 -->
    <root level="INFO">
        <appender-ref ref="CONSOLE"/>
        <appender-ref ref="FILE"/>
        <appender-ref ref="ERROR_FILE"/>
    </root>
</configuration>
