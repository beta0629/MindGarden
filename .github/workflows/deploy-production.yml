name: 🚀 MindGarden 운영 배포

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    name: 🏗️ 빌드 및 배포
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 코드 체크아웃
      uses: actions/checkout@v4
      
    - name: ☕ Java 17 설정
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: 📦 Node.js 18 설정
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
        
    - name: 🔧 Maven 캐시 설정
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
        
    - name: 🏗️ 백엔드 빌드
      run: mvn clean package -DskipTests
      
    - name: 📦 프론트엔드 의존성 설치
      run: |
        cd frontend
        npm ci
        
    - name: 🏗️ 프론트엔드 빌드
      run: |
        cd frontend
        npm run build
        
    - name: 🚀 서버 배포
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.PRODUCTION_HOST }}
        username: ${{ secrets.PRODUCTION_USER }}
        key: ${{ secrets.PRODUCTION_SSH_KEY }}
        script: |
          # 배포 디렉토리로 이동
          cd /var/www/mindgarden
          
          # 서비스 중지
          sudo systemctl stop mindgarden.service
          
          # 백업 생성
          if [ -f app.jar ]; then
            cp app.jar app.jar.backup.$(date +%Y%m%d_%H%M%S)
          fi
          
          # 프론트엔드 백업
          if [ -d frontend ]; then
            tar -czf frontend.backup.$(date +%Y%m%d_%H%M%S).tar.gz frontend/
          fi
          
    - name: 📤 백엔드 파일 업로드
      uses: appleboy/scp-action@v0.1.7
      with:
        host: ${{ secrets.PRODUCTION_HOST }}
        username: ${{ secrets.PRODUCTION_USER }}
        key: ${{ secrets.PRODUCTION_SSH_KEY }}
        source: "target/consultation-management-system-1.0.0.jar"
        target: "/var/www/mindgarden/"
        strip_components: 1
        overwrite: true
        
    - name: 📤 프론트엔드 파일 업로드
      uses: appleboy/scp-action@v0.1.7
      with:
        host: ${{ secrets.PRODUCTION_HOST }}
        username: ${{ secrets.PRODUCTION_USER }}
        key: ${{ secrets.PRODUCTION_SSH_KEY }}
        source: "frontend/build/*"
        target: "/var/www/html/"
        strip_components: 2
        overwrite: true
        
    - name: 🔧 프론트엔드 파일 권한 설정
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.PRODUCTION_HOST }}
        username: ${{ secrets.PRODUCTION_USER }}
        key: ${{ secrets.PRODUCTION_SSH_KEY }}
        script: |
          # 프론트엔드 파일 권한 설정
          sudo chown -R www-data:www-data /var/www/html/
          sudo chmod -R 755 /var/www/html/
          
          # CSS 파일 권한 특별 설정
          sudo find /var/www/html/ -name "*.css" -exec chmod 644 {} \;
          sudo find /var/www/html/ -name "*.js" -exec chmod 644 {} \;
          
          echo "✅ 프론트엔드 파일 권한 설정 완료"
        
    - name: 🔄 서비스 재시작
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.PRODUCTION_HOST }}
        username: ${{ secrets.PRODUCTION_USER }}
        key: ${{ secrets.PRODUCTION_SSH_KEY }}
        script: |
          cd /var/www/mindgarden
          
          # JAR 파일명 변경
          if [ -f consultation-management-system-1.0.0.jar ]; then
            mv consultation-management-system-1.0.0.jar app.jar
          fi
          
          # 권한 설정
          chmod +x app.jar
          
          # 기존 서비스 완전 정지 (극강화 버전)
          echo "🛑 서비스 완전 정지 시작..."
          
          # 1단계: systemd 서비스 정지
          echo "1️⃣ systemd 서비스 정지..."
          sudo systemctl stop mindgarden.service || true
          sudo systemctl disable mindgarden.service || true
          sleep 3
          
          # 2단계: 모든 Java 프로세스 강제 종료 (여러 번 시도)
          echo "2️⃣ Java 프로세스 강제 종료 (1차)..."
          sudo pkill -9 -f "mindgarden" || true
          sudo pkill -9 -f "app.jar" || true
          sudo pkill -9 -f "consultation-management-system" || true
          sudo pkill -9 -f "spring.profiles.active=prod" || true
          sudo pkill -9 -f "server.port=8080" || true
          sudo pkill -9 -f "java.*8080" || true
          sleep 2
          
          # 3단계: 포트 점유 프로세스 강제 종료
          echo "3️⃣ 포트 점유 프로세스 강제 종료..."
          sudo fuser -k 8080/tcp || true
          sudo fuser -k 8081/tcp || true
          sudo netstat -tlnp | grep :8080 | awk '{print $7}' | cut -d'/' -f1 | xargs -r sudo kill -9 || true
          sleep 2
          
          # 4단계: 재확인 및 2차 강제 종료
          echo "4️⃣ 남은 프로세스 2차 강제 종료..."
          sudo pkill -9 -f "java" | grep -E "(mindgarden|app\.jar|8080)" || true
          sudo killall -9 java || true
          sleep 3
          
          echo "🔍 프로세스 정리 확인..."
          ps aux | grep -E "(mindgarden|app\.jar|8080)" | grep -v grep || echo "✅ 모든 프로세스 정리됨"
          
          # systemd 완전 재시작 (극강화 버전)
          echo "🔄 systemd 완전 재시작..."
          
          # 1단계: systemd 재로드
          echo "1️⃣ systemd 재로드..."
          sudo systemctl daemon-reload
          sleep 2
          
          # 2단계: 서비스 활성화
          echo "2️⃣ 서비스 활성화..."
          sudo systemctl enable mindgarden.service
          sleep 1
          
          # 3단계: 서비스 시작 (최대 3번 시도)
          echo "3️⃣ 서비스 시작 시도..."
          for i in {1..3}; do
            echo "🚀 서비스 시작 시도 $i/3..."
            sudo systemctl start mindgarden.service
            sleep 10
            
            if sudo systemctl is-active --quiet mindgarden.service; then
              echo "✅ 서비스 시작 성공! (시도 $i/3)"
              break
            else
              echo "❌ 서비스 시작 실패 (시도 $i/3)"
              if [ $i -lt 3 ]; then
                echo "🔄 5초 후 재시도..."
                sudo systemctl stop mindgarden.service || true
                sleep 5
              fi
            fi
          done
          
          # 서비스 상태 확인
          echo "⏳ 서비스 시작 대기 중..."
          sleep 15
          
          echo "🔍 서비스 상태 확인..."
          sudo systemctl status mindgarden.service --no-pager | head -15
          
          echo "🔍 서비스 활성화 상태 확인..."
          sudo systemctl is-active mindgarden.service
          sudo systemctl is-enabled mindgarden.service
          
          echo "🔍 최근 로그 확인..."
          sudo journalctl -u mindgarden.service -n 20 --no-pager | tail -10
          
          echo "🔍 프로세스 확인..."
          ps aux | grep -E "(mindgarden|app\.jar)" | grep -v grep || echo "프로세스 없음"
          
          echo "🔍 서비스 재시작 확인..."
          if sudo systemctl is-active --quiet mindgarden.service; then
            echo "✅ 서비스 정상 시작됨"
            echo "🕐 서비스 시작 시간: $(sudo systemctl show mindgarden.service --property=ActiveEnterTimestamp --value)"
          else
            echo "❌ 서비스 시작 실패"
            sudo systemctl status mindgarden.service --no-pager -l
          fi
          
          # Nginx 설정 테스트 및 재로드
          sudo nginx -t
          sudo nginx -s reload
          
          # 정적 파일 서빙 확인
          echo "🔍 정적 파일 확인..."
          ls -la /var/www/html/static/css/ | head -5 || echo "CSS 디렉토리 없음"
          ls -la /var/www/html/static/js/ | head -5 || echo "JS 디렉토리 없음"
          
    - name: 🏥 헬스체크
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.PRODUCTION_HOST }}
        username: ${{ secrets.PRODUCTION_USER }}
        key: ${{ secrets.PRODUCTION_SSH_KEY }}
        script: |
          echo "🏥 헬스체크 시작..."
          
          # 30초 대기 후 헬스체크
          sleep 30
          
          # 서비스 상태 확인
          if sudo systemctl is-active --quiet mindgarden.service; then
            echo "✅ 서비스 정상 실행 중"
          else
            echo "❌ 서비스 실행 실패"
            sudo systemctl status mindgarden.service --no-pager
            exit 1
          fi
          
          # HTTP 헬스체크
          if curl -f -s http://localhost:8080/actuator/health > /dev/null; then
            echo "✅ HTTP 헬스체크 통과"
          else
            echo "❌ HTTP 헬스체크 실패"
            curl -v http://localhost:8080/actuator/health || true
          fi
          
          # 프론트엔드 확인
          if curl -f -s http://localhost/login > /dev/null; then
            echo "✅ 프론트엔드 정상 접근"
          else
            echo "❌ 프론트엔드 접근 실패"
          fi
          
          echo "🎉 배포 완료!"
          
    - name: 🧹 메모리 정리
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.PRODUCTION_HOST }}
        username: ${{ secrets.PRODUCTION_USER }}
        key: ${{ secrets.PRODUCTION_SSH_KEY }}
        script: |
          echo "🧹 메모리 정리 시작..."
          
          # 7일 이상 된 백업 파일 삭제
          cd /var/www/mindgarden
          find . -name "*.backup.*" -type f -mtime +7 -delete || true
          
          # 시스템 메모리 정리
          sync
          echo 3 | sudo tee /proc/sys/vm/drop_caches > /dev/null
          
          # 최종 시스템 상태
          echo "💾 메모리 사용량:"
          free -h
          echo ""
          echo "💿 디스크 사용량:"
          df -h /var/www/mindgarden
          echo ""
          echo "🔧 서비스 상태:"
          sudo systemctl is-active mindgarden.service
          
          echo "✅ 메모리 정리 완료!"