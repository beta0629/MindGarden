import { API_BASE_URL, MYPAGE_API } from '../constants/api';

/**
 * ÎßàÏù¥ÌéòÏù¥ÏßÄ Í¥ÄÎ†® API Ìò∏Ï∂ú Ïú†Ìã∏Î¶¨Ìã∞
 */

const mypageApi = {
  // ÎßàÏù¥ÌéòÏù¥ÏßÄ Ï†ïÎ≥¥ Ï°∞Ìöå
  getMyPageInfo: async () => {
    try {
      const response = await fetch(`${API_BASE_URL}${MYPAGE_API.GET_INFO}`, {
        method: 'GET',
        credentials: 'include',
        headers: {
          'Content-Type': 'application/json',
        },
      });

      if (!response.ok) {
        throw new Error(`HTTP error! status: ${response.status}`);
      }

      return await response.json();
    } catch (error) {
      console.error('ÎßàÏù¥ÌéòÏù¥ÏßÄ Ï†ïÎ≥¥ Ï°∞Ìöå Ïã§Ìå®:', error);
      throw error;
    }
  },

  // ÎßàÏù¥ÌéòÏù¥ÏßÄ Ï†ïÎ≥¥ ÏóÖÎç∞Ïù¥Ìä∏
  updateMyPageInfo: async (updateData) => {
    try {
      const response = await fetch(`${API_BASE_URL}${MYPAGE_API.UPDATE_INFO}`, {
        method: 'PUT',
        credentials: 'include',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify(updateData),
      });

      if (!response.ok) {
        throw new Error(`HTTP error! status: ${response.status}`);
      }

      return await response.json();
    } catch (error) {
      console.error('ÎßàÏù¥ÌéòÏù¥ÏßÄ Ï†ïÎ≥¥ ÏóÖÎç∞Ïù¥Ìä∏ Ïã§Ìå®:', error);
      throw error;
    }
  },

  // ÎπÑÎ∞ÄÎ≤àÌò∏ Î≥ÄÍ≤Ω
  changePassword: async (passwordData) => {
    try {
      const response = await fetch(`${API_BASE_URL}${MYPAGE_API.CHANGE_PASSWORD}`, {
        method: 'POST',
        credentials: 'include',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify(passwordData),
      });

      if (!response.ok) {
        const errorMessage = await response.text();
        throw new Error(errorMessage);
      }

      return await response.text();
    } catch (error) {
      console.error('ÎπÑÎ∞ÄÎ≤àÌò∏ Î≥ÄÍ≤Ω Ïã§Ìå®:', error);
      throw error;
    }
  },

  // ÎπÑÎ∞ÄÎ≤àÌò∏ Ïû¨ÏÑ§Ï†ï ÏöîÏ≤≠
  requestPasswordReset: async (email) => {
    try {
      const response = await fetch(`${API_BASE_URL}${MYPAGE_API.RESET_PASSWORD}`, {
        method: 'POST',
        credentials: 'include',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({ email }),
      });

      if (!response.ok) {
        const errorMessage = await response.text();
        throw new Error(errorMessage);
      }

      return await response.text();
    } catch (error) {
      console.error('ÎπÑÎ∞ÄÎ≤àÌò∏ Ïû¨ÏÑ§Ï†ï ÏöîÏ≤≠ Ïã§Ìå®:', error);
      throw error;
    }
  },

  // ÌîÑÎ°úÌïÑ Ïù¥ÎØ∏ÏßÄ ÏóÖÎ°úÎìú
  uploadProfileImage: async (base64Image) => {
    try {
      const response = await fetch(`${API_BASE_URL}${MYPAGE_API.UPLOAD_IMAGE}`, {
        method: 'POST',
        credentials: 'include',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify(base64Image),
      });

      if (!response.ok) {
        throw new Error(`HTTP error! status: ${response.status}`);
      }

      return await response.text();
    } catch (error) {
      console.error('ÌîÑÎ°úÌïÑ Ïù¥ÎØ∏ÏßÄ ÏóÖÎ°úÎìú Ïã§Ìå®:', error);
      throw error;
    }
  },

  // ÏÜåÏÖú Í≥ÑÏ†ï Î™©Î°ù Ï°∞Ìöå
  getSocialAccounts: async () => {
    try {
      const response = await fetch(`${API_BASE_URL}${MYPAGE_API.GET_SOCIAL_ACCOUNTS}`, {
        method: 'GET',
        credentials: 'include',
        headers: {
          'Content-Type': 'application/json',
        },
      });

      if (!response.ok) {
        throw new Error(`HTTP error! status: ${response.status}`);
      }

      return await response.json();
    } catch (error) {
      console.error('ÏÜåÏÖú Í≥ÑÏ†ï Î™©Î°ù Ï°∞Ìöå Ïã§Ìå®:', error);
      throw error;
    }
  },

  // OAuth2 Ïù∏Ï¶ù URL ÏÉùÏÑ± (Í≥ÑÏ†ï Ïó∞Îèô Î™®Îìú)
  getOAuth2Url: async (provider) => {
    try {
      // Í≥ÑÏ†ï Ïó∞Îèô Î™®ÎìúÎ°ú ÏöîÏ≤≠ - Ïò¨Î∞îÎ•∏ ÏóîÎìúÌè¨Ïù∏Ìä∏ ÏÇ¨Ïö©
      const response = await fetch(`${API_BASE_URL}/api/auth/oauth2/${provider.toLowerCase()}/authorize`, {
        method: 'GET',
        credentials: 'include',
        headers: {
          'Content-Type': 'application/json',
        },
      });

      if (!response.ok) {
        throw new Error(`HTTP error! status: ${response.status}`);
      }

      // ÏùëÎãµÏù¥ JSONÏù∏ÏßÄ Î¨∏ÏûêÏó¥Ïù∏ÏßÄ ÌôïÏù∏
      const contentType = response.headers.get('content-type');
      console.log('üîç OAuth2 ÏùëÎãµ Content-Type:', contentType);
      
      if (contentType && contentType.includes('application/json')) {
        const data = await response.json();
        console.log('üìù JSON ÏùëÎãµ Îç∞Ïù¥ÌÑ∞:', data);
        return data.redirectUrl || data;
      } else {
        // JSONÏù¥ ÏïÑÎãå Í≤ΩÏö∞ ÏßÅÏ†ë URL Î∞òÌôò
        const url = await response.text();
        console.log('üîó ÏßÅÏ†ë Î∞òÌôòÎêú URL:', url);
        return url;
      }
    } catch (error) {
      console.error('OAuth2 URL ÏÉùÏÑ± Ïã§Ìå®:', error);
      throw error;
    }
  },
  
  // OAuth2 Ïù∏Ï¶ù URL ÏÉùÏÑ± (ÏÜåÏÖú Î°úÍ∑∏Ïù∏ Î™®Îìú)
  getOAuth2LoginUrl: async (provider) => {
    try {
      // ÏÜåÏÖú Î°úÍ∑∏Ïù∏ Î™®ÎìúÎ°ú ÏöîÏ≤≠ - Ïò¨Î∞îÎ•∏ ÏóîÎìúÌè¨Ïù∏Ìä∏ ÏÇ¨Ïö©
      const response = await fetch(`${API_BASE_URL}/api/auth/oauth2/${provider.toLowerCase()}/authorize`, {
        method: 'GET',
        credentials: 'include',
        headers: {
          'Content-Type': 'application/json',
        },
      });

      if (!response.ok) {
        throw new Error(`HTTP error! status: ${response.status}`);
      }

      // ÏùëÎãµÏù¥ JSONÏù∏ÏßÄ Î¨∏ÏûêÏó¥Ïù∏ÏßÄ ÌôïÏù∏
      const contentType = response.headers.get('content-type');
      console.log('üîç OAuth2 Î°úÍ∑∏Ïù∏ ÏùëÎãµ Content-Type:', contentType);
      
      if (contentType && contentType.includes('application/json')) {
        const data = await response.json();
        console.log('üìù JSON ÏùëÎãµ Îç∞Ïù¥ÌÑ∞:', data);
        return data.redirectUrl || data;
      } else {
        // JSONÏù¥ ÏïÑÎãå Í≤ΩÏö∞ ÏßÅÏ†ë URL Î∞òÌôò
        const url = await response.text();
        console.log('üîó ÏßÅÏ†ë Î∞òÌôòÎêú URL:', url);
        return url;
      }
    } catch (error) {
      console.error('OAuth2 Î°úÍ∑∏Ïù∏ URL ÏÉùÏÑ± Ïã§Ìå®:', error);
      throw error;
    }
  },

  // ÏÜåÏÖú Í≥ÑÏ†ï Ïó∞Îèô Ìï¥Ï†ú
  unlinkSocialAccount: async (provider, accountId) => {
    try {
      const response = await fetch(`${API_BASE_URL}${MYPAGE_API.MANAGE_SOCIAL_ACCOUNT}`, {
        method: 'POST',
        credentials: 'include',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          action: 'UNLINK',
          provider: provider,
          accountId: accountId
        }),
      });

      if (!response.ok) {
        const errorMessage = await response.text();
        throw new Error(errorMessage);
      }

      return await response.text();
    } catch (error) {
      console.error('ÏÜåÏÖú Í≥ÑÏ†ï Ïó∞Îèô Ìï¥Ï†ú Ïã§Ìå®:', error);
      throw error;
    }
  },
};

export default mypageApi;
